{
	"info": {
		"_postman_id": "0259dff5-cf03-4dea-9c51-0ed4e36a7a03",
		"name": "Airline - Airport",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20288420"
	},
	"item": [
		{
			"name": "Add an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airline_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Avianca\",\r\n    \"description\": \"Description\",\r\n    \"foundationDate\": \"1984-08-01\",\r\n    \"webpage\": \"url.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": [
				{
					"name": "Add an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Avianca\",\r\n    \"description\": \"Description\",\r\n    \"foundationDate\": \"1984-08-01T00:00:00-05:00\",\r\n    \"webpage\": \"url.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\":\"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\":\"Colombia\",\r\n    \"description\": \"Description\",\r\n    \"foundationDate\": \"1984-08-01T00:00:00-05:00\",\r\n    \"webpage\": \"url.com\"\r\n}"
				}
			]
		},
		{
			"name": "Add an airport 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\":\"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}"
				}
			]
		},
		{
			"name": "Add an airport 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\":\"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}"
				}
			]
		},
		{
			"name": "Add a Airport to a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						},
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Add an Airport to an Airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								},
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\":\"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\":\"Avianca\",\n    \"description\": \"Description\",\n    \"foundationDate\": \"1984-08-01T00:00:00-05:00\",\n    \"webpage\": \"url.com\",\n    \"airports\":[\n            {\n            \"name\":\"El Dorado\",\n            \"code\": \"BOG\",\n            \"country\": \"Colombia\",\n            \"city\": \"Bogota\"\n        }\n        ]\n}"
				}
			]
		},
		{
			"name": "Add an invalid Airport to an Airline",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": ""
						}
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid Airport to an Airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Add a Airport to an invalid Airline",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Italia\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Add an Airport to an invalid Airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Italia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airline with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get all the Airports of an Airline",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get all the Airports of a Airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n    {\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n},\r\n{\r\n    \"name\":\"Rafael Nuñez\",\r\n    \"code\": \"CTG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Cartagena\"\r\n},\r\n{\r\n    \"name\":\"Ernesto Cortizzo\",\r\n    \"code\": \"BAQ\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Barranquilla\"\r\n}\r\n]"
				}
			]
		},
		{
			"name": "Get an Airport of an Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						},
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get an Airport of an Airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								},
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\":\"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}"
				}
			]
		},
		{
			"name": "Get all the Airports of an invalid Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Get all the Airports of an invalid Airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000",
								"airports"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airline with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get an Airport not associated to a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						},
						{
							"key": "airport_id",
							"value": "{{airport_id_2}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get an Airport not associated to an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								},
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The airport with the given id is not associated to the airline\"\n}"
				}
			]
		},
		{
			"name": "Get an invalid Airport of an Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid Airport of a Airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a Airport of an invalid Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get a Airport of an invalid Airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airlines with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update an Airport to a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"id\": \"{{airport_id}}\"\r\n}\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Update a Airport to a Airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"7ef3a286-4148-4d26-838b-53aaed0a722d\",\r\n    \"name\": \"Avianca\",\r\n    \"description\": \"Description\",\r\n    \"foundationDate\": \"1984-08-01T05:00:00.000Z\",\r\n    \"webpage\": \"url.com\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"f17a6546-2a47-45b5-ad44-4ffa5c2ef631\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\":\"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\":\"Avianca\",\n    \"description\": \"Description\",\n    \"foundationDate\": \"1984-08-01T00:00:00-05:00\",\n    \"webpage\": \"url.com\",\n    \"airports\":[\n            {\n            \"name\":\"El Dorado\",\n            \"code\": \"BOG\",\n            \"country\": \"Colombia\",\n            \"city\": \"Bogota\"\n        }\n        ]\n}"
				}
			]
		},
		{
			"name": "Update an invalid airport to a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n}\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid Airport to a Airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": ""
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update a Airport to an invalid Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"id\": \"{{airport_id}}\"\r\n}\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update a Airport to an invalid Airline",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n    \"id\": \"{{airport_id}}\"\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airport_id",
									"value": ""
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airline with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a Airport of a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						},
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Delete a Airport of a Ariline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								},
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an Airport not associated to a Airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						":airline_id",
						"airports",
						":airport_id"
					],
					"variable": [
						{
							"key": "airline_id",
							"value": "{{airline_id}}"
						},
						{
							"key": "airport_id",
							"value": "{{airport_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Delete a Airport not associated to a Airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/:airline_id/airports/:airport_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								":airline_id",
								"airports",
								":airport_id"
							],
							"variable": [
								{
									"key": "airline_id",
									"value": "{{airline_id}}"
								},
								{
									"key": "airport_id",
									"value": "{{airport_id}}"
								}
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"The airport with the given id is not associated to the airline\"\r\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}